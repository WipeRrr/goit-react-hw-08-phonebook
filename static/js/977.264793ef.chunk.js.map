{"version":3,"file":"static/js/977.264793ef.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","Redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contact.module.css?00cb","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactForm__label\":\"ContactForm_contactForm__label__LWT6p\",\"contactForm__input\":\"ContactForm_contactForm__input__k3i+4\",\"contactForm__button\":\"ContactForm_contactForm__button__C3X5B\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items; \nexport const selectFilter = state => state.filter.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter], \n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { BarLoader } from 'react-spinners';\nimport css  from './Loader.module.css'\n\nfunction Loader() {\n  return <BarLoader className={css.loader} color=\"#007bff\" size={5} />;\n}\n\nexport default Loader;\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../Redux/contacts/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectContacts, selectIsLoading } from 'Redux/contacts/selectors';\nimport Loader from '../../components/Loader/Loader';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() ===\n          e.target.elements.name.value.toLowerCase()\n      )\n    ) {\n      Notify.warning(`${e.target.elements.name.value} is already in contact`, {\n        position: 'center-top',\n      });\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      {isLoading && <Loader className={css.contactForm__label} />}\n      <form className={css.contactForm} onSubmit={handleSubmit}>\n        <label className={css.contactForm__label}>\n          Name\n          <input\n            className={css.contactForm__input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label className={css.contactForm__label}>\n          Number\n          <input\n            className={css.contactForm__input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleInputChange}\n          />\n        </label>\n        <button className={css.contactForm__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactList__item\":\"ContactList_contactList__item__2K2vx\",\"contactList__item__number\":\"ContactList_contactList__item__number__1JVyR\",\"contactList__item__button\":\"ContactList_contactList__item__button__lonOK\"};","import css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  deleteContact } from '../../Redux/contacts/operations';\n// import { useEffect } from 'react';\nimport {\n  selectError,\n  selectVisibleContacts,\n  selectIsLoading,\n  selectContacts,\n} from '../../Redux/contacts/selectors';\nimport { ClipLoader } from 'react-spinners';\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <>\n      {error && <p>{error}</p>}\n      <ul className={css.contactList}>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li className={css.contactList__item} key={id}>\n            {name}:\n            <span className={css.contactList__item__number}>{number}</span>\n            <button\n              className={css.contactList__item__button}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              disabled={isLoading}\n            >\n              {isLoading && <ClipLoader color=\"#fff\" size={10} />}\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      {!contacts.length && !error && !isLoading && (\n        <p>Your phonebook is empty. Please add contact.</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__label\":\"Filter_filter__label__ttfPR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import React from 'react';\n\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'Redux/contacts/selectors';\nimport { changeFilter } from 'Redux/contacts/sliceFilter';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <label className={css.filter__label}>\n      Find contacts by name\n      <input\n        className={css.filter__input}\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contact_container__lo761\"};","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import { Helmet } from 'react-helmet';\r\n// import { TaskList } from 'components/TaskList/TaskList';\r\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\r\nimport { fetchContacts } from 'Redux/contacts/operations';\r\n// import { selectLoading } from 'redux/tasks/selectors';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport Filter from '../components/Filter/Filter';\r\nimport css from './Contact.module.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Contacts() {\r\n  const dispatch = useDispatch();\r\n  // const isLoading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm></ContactForm>\r\n      <h2>Contacts</h2>\r\n      <Filter></Filter>\r\n      <ContactList></ContactList>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectVisibleContacts","createSelector","name","toLowerCase","includes","BarLoader","className","css","color","size","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","e","target","value","onSubmit","preventDefault","find","contact","elements","Notify","position","addContact","type","pattern","title","required","onChange","filteredContacts","map","id","onClick","deleteContact","disabled","ClipLoader","length","changeFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}